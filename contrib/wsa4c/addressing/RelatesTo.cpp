/*

 * Copyright 2001-2004 The Apache Software Foundation.

 * 

 * Licensed under the Apache License, Version 2.0 (the "License");

 * you may not use this file except in compliance with the License.

 * You may obtain a copy of the License at

 * 

 *      http://www.apache.org/licenses/LICENSE-2.0

 * 

 * Unless required by applicable law or agreed to in writing, software

 * distributed under the License is distributed on an "AS IS" BASIS,

 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

 * See the License for the specific language governing permissions and

 * limitations under the License.

 */


#include "RelatesTo.hpp" 
#include "RelationshipType.hpp"
#include "Constants.hpp"	

RelatesTo::RelatesTo()
{
    m_pRelationshipType = NULL;
}
	
RelatesTo::RelatesTo(AxisChar* pachUri)
:AttributedUri(Constants.RELATES_TO,pachUri)
{
    m_pRelationshipType = NULL;
}

void RelatesTo::setRelationshipType(RelationshipType * pRelationshipType)
{
    m_pRelationshipType = pRelationshipType;
}

RelatesTo::~RelatesTo()
{
    if(m_pRelationshipType != NULL)
        delete(m_pRelationshipType);
}

RelationshipType * RelatesTo::getRelationshipType()
{
    return m_pRelationshipType;
}

IHeaderBlock * RelatesTo::toSoapHeaderBlock(IMessageData *pIMsg)
{
    FILE * f = fopen("log4.out","w");
    IHandlerSoapSerializer* pISZ;
	pIMsg->getSoapSerializer(&pISZ);
    
	IHeaderBlock* pIHeaderBlock= pISZ->createHeaderBlock(getLocalName(),Constants.NS_URI_ADDRESSING);

    if(m_pRelationshipType != NULL)
        pIHeaderBlock->createAttribute(Constants.RELATIONSHIP_TYPE,"",m_pRelationshipType->getUri());
		        
	BasicNode* pBasicNode = pIHeaderBlock->createChild(CHARACTER_NODE,  
                            NULL,NULL,NULL,getUri());
	
	pIHeaderBlock->addChild(pBasicNode);
    
    return pIHeaderBlock;
}













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































 
   
