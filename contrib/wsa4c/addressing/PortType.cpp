/*

 * Copyright 2001-2004 The Apache Software Foundation.

 * 

 * Licensed under the Apache License, Version 2.0 (the "License");

 * you may not use this file except in compliance with the License.

 * You may obtain a copy of the License at

 * 

 *      http://www.apache.org/licenses/LICENSE-2.0

 * 

 * Unless required by applicable law or agreed to in writing, software

 * distributed under the License is distributed on an "AS IS" BASIS,

 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

 * See the License for the specific language governing permissions and

 * limitations under the License.

 */


#include "PortType.hpp" 
#include "Constants.hpp"	

PortType::PortType()
{
}
	
PortType::PortType(const AxisChar* pachLocalName, const AxisChar* pachUri)
:AttributedQName(pachLocalName,pachUri)
{
}

PortType::PortType(const AxisChar* pachQname)
:AttributedQName(pachQname)
{
}

IHeaderBlock * PortType::toSoapHeaderBlock(IMessageData *pIMsg)
{
   	IHandlerSoapSerializer* pISZ;
	pIMsg->getSoapSerializer(&pISZ);

	IHeaderBlock* pIHeaderBlock= pISZ->createHeaderBlock();

	pIHeaderBlock->setLocalName(Constants.PORT_TYPE);
	pIHeaderBlock->setUri(Constants.NS_URI_ADDRESSING);
  
	BasicNode * pBasicNode = pIHeaderBlock->createChild(CHARACTER_NODE);
	pBasicNode->setValue(getQname());
	pIHeaderBlock->addChild(pBasicNode);

    return pIHeaderBlock;
}













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































 
   
